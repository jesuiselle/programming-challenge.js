{"version":3,"sources":["components/UI/Card.js","components/Jobs/JobList.js","components/UI/ErrorModal.js","hooks/http.js","components/Jobs/Search.js","components/Jobs/Jobs.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","children","JobList","jobs","map","ig","href","src","logo","alt","responsibilities","title","companyName","companyCity","viewBox","fill","d","id","ErrorModal","React","memo","Fragment","onClick","onClose","type","initialState","loading","error","data","extra","identifier","httpReducer","curHttpState","action","responseData","errorMessage","Error","useHttp","useReducer","httpState","dispatchHttp","clear","useCallback","sendRequest","url","method","body","reqExtra","reqIdentifer","fetch","then","response","json","catch","isLoading","Search","onLoadJobs","useState","enteredFilter","setEnteredFilter","inputRef","useRef","useEffect","timer","setTimeout","current","value","query","length","clearTimeout","loadedJobs","key","included","job","push","attributes","company","name","city","ref","onChange","event","target","placeholder","htmlFor","jobReducer","currentJobs","Jobs","userJobs","dispatch","filteredJobsHandler","filteredJobs","jobList","useMemo","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAOeA,G,MAJF,SAAAC,GACX,OAAO,qBAAKC,UAAU,OAAf,SAAuBD,EAAME,aC+BvBC,G,MA/BC,SAAAH,GACd,OACI,yBAASC,UAAU,WAAnB,SACKD,EAAMI,KAAKC,KAAI,SAAAC,GAAE,OACd,cAAC,EAAD,UACI,yBAASL,UAAU,WAAnB,SACI,oBAAGM,KAAK,KAAKN,UAAU,iBAAvB,UACI,qBAAKA,UAAU,iBAAf,SACI,qBAAKO,IAAMF,EAAGG,KAAOC,IAAI,OAE7B,qBAAKT,UAAU,kBAAf,SACI,4BAAIK,EAAGK,qBAEX,sBAAKV,UAAU,mBAAf,UACI,oBAAIA,UAAU,yBAAd,SAAwCK,EAAGM,QAC3C,oBAAGX,UAAU,wBAAb,oBAA6CK,EAAGO,YAAhD,OAAiEP,EAAGQ,eACpE,qBAAKb,UAAU,wBAAf,SACI,qBAAKc,QAAQ,YAAb,SACI,sBAAMC,KAAK,UACLC,EAAE,qGAfpBX,EAAGY,WCYdC,G,MAjBIC,IAAMC,MAAK,SAAArB,GAC5B,OACI,eAAC,IAAMsB,SAAP,WACI,qBAAKrB,UAAU,WAAWsB,QAAUvB,EAAMwB,UAC1C,sBAAKvB,UAAU,cAAf,UACI,6DACA,4BAAID,EAAME,WACV,qBAAKD,UAAU,uBAAf,SACI,wBAAQA,UAAU,sBAAsBwB,KAAK,SAASF,QAAUvB,EAAMwB,QAAtE,4B,OCTZE,EAAe,CACnBC,SAAS,EACTC,MAAO,KACPC,KAAM,KACNC,MAAO,KACPC,WAAY,MAGRC,EAAc,SAACC,EAAcC,GACjC,OAAQA,EAAOT,MACb,IAAK,OACH,MAAO,CACLE,SAAS,EACTC,MAAO,KACPC,KAAM,KACNC,MAAO,KACPC,WAAYG,EAAOH,YAEvB,IAAK,WACH,OAAO,2BACFE,GADL,IAEEN,SAAS,EACTE,KAAMK,EAAOC,aACbL,MAAOI,EAAOJ,QAElB,IAAK,QACH,MAAO,CAAEH,SAAS,EAAOC,MAAOM,EAAOE,cACzC,IAAK,QACH,OAAOV,EACT,QACE,MAAM,IAAIW,MAAM,4BA+CPC,EA3CC,WAAO,IAAD,EACgBC,qBAAWP,EAAaN,GADxC,mBACZc,EADY,KACDC,EADC,KAGdC,EAAQC,uBAAY,kBAAMF,EAAa,CAAEhB,KAAM,YAAY,IAE3DmB,EAAcD,uBAClB,SAACE,EAAKC,EAAQC,EAAMC,EAAUC,GAC5BR,EAAa,CAAEhB,KAAM,OAAQM,WAAYkB,IACzCC,MAAML,EAAK,CACTC,OAAQA,EACRC,KAAMA,IAELI,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAhB,GACJM,EAAa,CACXhB,KAAM,WACNU,aAAcA,EACdL,MAAOkB,OAGVM,OAAM,SAAA1B,GACLa,EAAa,CACXhB,KAAM,QACNW,aAAc,4BAItB,IAGF,MAAO,CACLmB,UAAWf,EAAUb,QACrBE,KAAMW,EAAUX,KAChBD,MAAOY,EAAUZ,MACjBgB,YAAaA,EACbI,SAAUR,EAAUV,MACpBmB,aAAcT,EAAUT,WACxBW,MAAOA,ICHIc,G,MAlEApC,IAAMC,MAAK,SAAArB,GAAU,IAC1ByD,EAAezD,EAAfyD,WADyB,EAEWC,mBAAS,IAFpB,mBAEzBC,EAFyB,KAEVC,EAFU,KAG3BC,EAAWC,mBAHgB,EAIsBxB,IAA/CiB,EAJyB,EAIzBA,UAAW1B,EAJc,EAIdA,KAAMD,EAJQ,EAIRA,MAAOgB,EAJC,EAIDA,YAAaF,EAJZ,EAIYA,MAuC7C,OArCAqB,qBAAU,WACR,IAAMC,EAAQC,YAAW,WACvB,GAAIN,IAAkBE,EAASK,QAAQC,MAAO,CAC5C,IAAMC,EACqB,IAAzBT,EAAcU,OACV,GADJ,yBAEuBV,EAFvB,KAGFf,EACI,iDAAmDwB,EACnD,UAGL,KACH,OAAO,WACLE,aAAaN,MAEd,CAAEL,EAAeE,EAAUjB,IAE9BmB,qBAAU,WACR,IAAKR,IAAc3B,GAASC,EAAM,CAChC,IAAM0C,EAAa,GACnB,IAAK,IAAMC,KAAO3C,EAAK4C,SAAU,CAC/B,IAAMC,EAAM7C,EAAK4C,SAAUD,GAE3BD,EAAWI,KAAK,CACdzD,GAAIsD,EACJ5D,MAAO8D,EAAIE,WAAWhE,MACtBD,iBAAmB+D,EAAIE,WAAWjE,iBAClCF,KAAMiE,EAAIE,WAAWC,QAAQpE,KAC7BI,YAAa6D,EAAIE,WAAWC,QAAQC,KACpChE,YAAa4D,EAAIE,WAAWC,QAAQE,OAGxCtB,EAAWc,MAEZ,CAAE1C,EAAM0B,EAAW3B,EAAO6B,IAGzB,0BAASxD,UAAU,SAAnB,UACK2B,GAAS,cAAC,EAAD,CAAYJ,QAAUkB,EAAtB,SAA+Bd,IACzC,cAAC,EAAD,UACI,qBAAK3B,UAAU,eAAf,SACI,uBAAMA,UAAU,cAAhB,UACI,uBACJ+E,IAAMnB,EACNpC,KAAK,OACLqD,KAAK,eACL5D,GAAG,eACHiD,MAAQR,EACRsB,SAAW,SAAAC,GAAK,OAAItB,EAAiBsB,EAAMC,OAAOhB,QAClDiB,YAAY,uBACR,uBAAOC,QAAQ,qBAAf,gCACA,sBAAKpF,UAAU,WAAf,UAA2BsD,GAAa,qBAAKtD,UAAU,iBAAf,0BAAxC,gCC1DhBqF,EAAa,SAACC,EAAarD,GAC/B,OAAQA,EAAOT,MACb,IAAK,MACH,OAAOS,EAAO9B,KAChB,QACE,MAAM,IAAIiC,MAAM,2BAmCPmD,EA/BF,WAAO,IAAD,EACcjD,qBAAW+C,EAAY,IADrC,mBACTG,EADS,KACCC,EADD,OAKbpD,IAFFV,EAHe,EAGfA,MACAc,EAJe,EAIfA,MAGIiD,EAAsBhD,uBAAY,SAAAiD,GACtCF,EAAS,CAAEjE,KAAM,MAAOrB,KAAMwF,MAC7B,IAEGC,EAAUC,mBAAQ,WACtB,OACI,cAAC,EAAD,CACA1F,KAAOqF,MAGV,CAAEA,IAEL,OACI,sBAAKxF,UAAU,MAAf,UACK2B,GAAS,cAAC,EAAD,CAAYJ,QAAUkB,EAAtB,SAA+Bd,IAEzC,oCACI,cAAC,EAAD,CAAQ6B,WAAakC,IACpBE,SCjCAE,MAJf,WACI,OAAO,cAAC,EAAD,KCQIC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/C,MAAK,YAAkD,IAA/CgD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAENC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ee63abde.chunk.js","sourcesContent":["import React from 'react';\nimport './Card.css';\n\nconst Card = props => {\n  return <div className=\"card\">{props.children}</div>;\n};\n\nexport default Card;\n","import React from 'react';\nimport Card from '../UI/Card';\nimport './JobList.css';\n\nconst JobList = props => {\n  return (\n      <section className=\"job-list\">\n          {props.jobs.map(ig => (\n              <Card key={ ig.id }>\n                  <article className=\"job-card\">\n                      <a href=\"!#\" className=\"job-card__link\">\n                          <div className=\"job-card__icon\">\n                              <img src={ ig.logo } alt=\"\"/>\n                          </div>\n                          <div className=\"job-card__media\">\n                              <p>{ig.responsibilities}</p>\n                          </div>\n                          <div className=\"job-card__header\">\n                              <h3 className=\"job-card__header-title\">{ig.title}</h3>\n                              <p className=\"job-card__header-meta\">_ beim {ig.companyName} im {ig.companyCity}</p>\n                              <div className=\"job-card__header-icon\">\n                                  <svg viewBox=\"0 0 28 25\">\n                                      <path fill=\"#f2a900\"\n                                            d=\"M13.145 2.13l1.94-1.867 12.178 12-12.178 12-1.94-1.867 8.931-8.8H.737V10.93h21.339z\"/>\n                                  </svg>\n                              </div>\n                          </div>\n                      </a>\n                  </article>\n              </Card>\n          ))}\n      </section>\n  );\n};\n\nexport default JobList;\n","import React from 'react';\nimport './ErrorModal.css';\n\nconst ErrorModal = React.memo(props => {\n  return (\n      <React.Fragment>\n          <div className=\"backdrop\" onClick={ props.onClose } />\n          <div className=\"error-modal\">\n              <h2>Ein Fehler ist aufgetreten!</h2>\n              <p>{props.children}</p>\n              <div className=\"error-modal__actions\">\n                  <button className=\"error-modal__button\" type=\"button\" onClick={ props.onClose }>\n                      Ok\n                  </button>\n              </div>\n          </div>\n      </React.Fragment>\n  );\n});\n\nexport default ErrorModal;\n","import { useReducer, useCallback } from 'react';\n\nconst initialState = {\n  loading: false,\n  error: null,\n  data: null,\n  extra: null,\n  identifier: null\n};\n\nconst httpReducer = (curHttpState, action) => {\n  switch (action.type) {\n    case 'SEND':\n      return {\n        loading: true,\n        error: null,\n        data: null,\n        extra: null,\n        identifier: action.identifier\n      };\n    case 'RESPONSE':\n      return {\n        ...curHttpState,\n        loading: false,\n        data: action.responseData,\n        extra: action.extra\n      };\n    case 'ERROR':\n      return { loading: false, error: action.errorMessage };\n    case 'CLEAR':\n      return initialState;\n    default:\n      throw new Error('Should not be reached!');\n  }\n};\n\nconst useHttp = () => {\n  const [ httpState, dispatchHttp ] = useReducer(httpReducer, initialState);\n\n  const clear = useCallback(() => dispatchHttp({ type: 'CLEAR' }), []);\n\n  const sendRequest = useCallback(\n    (url, method, body, reqExtra, reqIdentifer) => {\n      dispatchHttp({ type: 'SEND', identifier: reqIdentifer });\n      fetch(url, {\n        method: method,\n        body: body\n      })\n        .then(response => {\n          return response.json();\n        })\n        .then(responseData => {\n          dispatchHttp({\n            type: 'RESPONSE',\n            responseData: responseData,\n            extra: reqExtra\n          });\n        })\n        .catch(error => {\n          dispatchHttp({\n            type: 'ERROR',\n            errorMessage: 'Etwas ging schief!'\n          });\n        });\n    },\n    []\n  );\n\n  return {\n    isLoading: httpState.loading,\n    data: httpState.data,\n    error: httpState.error,\n    sendRequest: sendRequest,\n    reqExtra: httpState.extra,\n    reqIdentifer: httpState.identifier,\n    clear: clear\n  };\n};\n\nexport default useHttp;\n","import React, { useState, useEffect, useRef } from 'react';\nimport Card from '../UI/Card';\nimport ErrorModal from '../UI/ErrorModal';\nimport useHttp from '../../hooks/http';\nimport './Search.css';\n\nconst Search = React.memo(props => {\n  const { onLoadJobs } = props;\n  const [ enteredFilter, setEnteredFilter ] = useState('');\n  const inputRef = useRef();\n  const { isLoading, data, error, sendRequest, clear } = useHttp();\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (enteredFilter === inputRef.current.value) {\n        const query =\n          enteredFilter.length === 0\n            ? ''\n            : `?search.query=\"${ enteredFilter }\"`;\n        sendRequest(\n            'https://staging-api.joblocal.de/v4/search-jobs' + query,\n            'GET'\n        );\n      }\n    }, 500);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [ enteredFilter, inputRef, sendRequest ]);\n\n  useEffect(() => {\n    if (!isLoading && !error && data) {\n      const loadedJobs = [];\n      for (const key in data.included) {\n        const job = data.included[ key ]\n\n        loadedJobs.push({\n          id: key,\n          title: job.attributes.title,\n          responsibilities : job.attributes.responsibilities,\n          logo: job.attributes.company.logo,\n          companyName: job.attributes.company.name,\n          companyCity: job.attributes.company.city\n        });\n      }\n      onLoadJobs(loadedJobs);\n    }\n  }, [ data, isLoading, error, onLoadJobs ]);\n\n  return (\n      <section className=\"search\">\n          {error && <ErrorModal onClose={ clear }>{error}</ErrorModal>}\n          <Card>\n              <div className=\"search-input\">\n                  <span className=\"input-group\">\n                      <input\n                  ref={ inputRef }\n                  type=\"text\"\n                  name=\"input-search\"\n                  id=\"input-search\"\n                  value={ enteredFilter }\n                  onChange={ event => setEnteredFilter(event.target.value) }\n                  placeholder=\"Tippen Sie hier...\"/>\n                      <label htmlFor=\"text-1542372332072\">Tippen Sie hier...</label>\n                      <div className=\"req-mark\">{isLoading && <div className=\"search-loading\">Laden von...</div>}😃</div>\n                  </span>\n              </div>\n          </Card>\n      </section>\n  );\n});\n\nexport default Search;\n","import React, { useReducer, useCallback, useMemo } from 'react';\nimport JobList from './JobList';\nimport ErrorModal from '../UI/ErrorModal';\nimport Search from './Search';\nimport useHttp from '../../hooks/http';\n\nconst jobReducer = (currentJobs, action) => {\n  switch (action.type) {\n    case 'SET':\n      return action.jobs;\n    default:\n      throw new Error('Should not get there!');\n  }\n};\n\nconst Jobs = () => {\n  const [ userJobs, dispatch ] = useReducer(jobReducer, []);\n  const {\n    error,\n    clear\n  } = useHttp();\n\n  const filteredJobsHandler = useCallback(filteredJobs => {\n    dispatch({ type: 'SET', jobs: filteredJobs });\n  }, []);\n\n  const jobList = useMemo(() => {\n    return (\n        <JobList\n        jobs={ userJobs }\n      />\n    );\n  }, [ userJobs ]);\n\n  return (\n      <div className=\"App\">\n          {error && <ErrorModal onClose={ clear }>{error}</ErrorModal>}\n\n          <section>\n              <Search onLoadJobs={ filteredJobsHandler } />\n              {jobList}\n          </section>\n      </div>\n  );\n};\n\nexport default Jobs;\n","import React from 'react';\nimport Jobs from './components/Jobs/Jobs';\n\nfunction App() {\n    return <Jobs/>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}